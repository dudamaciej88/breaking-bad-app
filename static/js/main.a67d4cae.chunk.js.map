{"version":3,"sources":["img/logo.png","img/spinner.gif","components/UI/Header.tsx","components/Characters/CharacterItem.tsx","components/UI/Spinner.tsx","components/Characters/CharacterGrid.tsx","components/UI/Search.tsx","App.tsx","index.tsx"],"names":["module","exports","Header","className","src","logo","alt","CharacterItem","item","img","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","isLoading","items","map","key","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,sMCW5BC,EARA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKC,IAAKC,IAAMC,IAAI,OCuCXC,EA7BwB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvC,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKI,EAAKC,IAAKH,IAAI,MAE1B,yBAAKH,UAAU,aACb,4BAAKK,EAAKE,MACV,4BACE,4BACE,+CADF,IACgCF,EAAKG,WAErC,4BACE,6CADF,IAC8BH,EAAKI,UAEnC,4BACE,6CADF,IAC8BJ,EAAKK,UAEnC,4BACE,2CADF,IAC4BL,EAAKM,a,iBCvB9BC,EAVC,WACd,OACE,yBACEX,IAAKY,IACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDd,IAAI,aCaKe,EAZwB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACnD,OAAOD,EACL,kBAAC,EAAD,MAEA,6BAASnB,UAAU,SAChBoB,EAAMC,KAAI,SAAChB,GAAD,OACT,kBAAC,EAAD,CAAeiB,IAAKjB,EAAKkB,QAASlB,KAAMA,SCejCmB,EAxBiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACxBC,mBAAS,IADe,mBACzCC,EADyC,KACnCC,EADmC,KAQhD,OACE,6BAAS5B,UAAU,UACjB,8BACE,2BACE6B,KAAK,OACL7B,UAAU,eACV8B,YAAY,oBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAbAC,EAagBD,EAAEE,OAAOJ,MAZzCH,EAAQM,QACRT,EAASS,GAFM,IAACA,GAcVE,WAAS,OCSJC,G,MAzBH,WAAO,IAAD,EACUX,mBAAS,IADnB,mBACTN,EADS,KACFkB,EADE,OAEkBZ,oBAAS,GAF3B,mBAETP,EAFS,KAEEoB,EAFF,OAGUb,mBAAS,IAHnB,mBAGTc,EAHS,KAGFC,EAHE,KAgBhB,OAXAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,kDAAD,OAC0BJ,IAFnC,OACXK,EADW,OAIjBP,EAASO,EAAOC,MAChBP,GAAa,GALI,2CAAH,qDAOhBQ,KACC,CAACP,IAGF,yBAAKxC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQyB,SAAU,SAACS,GAAD,OAAeO,EAASP,MAC1C,kBAAC,EAAD,CAAef,UAAWA,EAAWC,MAAOA,OCvBlD4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a67d4cae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"center\">\r\n      <img src={logo} alt=\"\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport interface ItemType {\r\n  name: string;\r\n  img: string;\r\n  portrayed: string;\r\n  nickname: string;\r\n  birthday: string;\r\n  status: string;\r\n  char_id: number;\r\n}\r\n\r\ntype Props = {\r\n  item: ItemType;\r\n};\r\n\r\nconst CharacterItem: React.FC<Props> = ({item}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-inner\">\r\n        <div className=\"card-front\">\r\n          <img src={item.img} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-back\">\r\n          <h1>{item.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {item.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {item.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {item.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {item.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n","import React from \"react\";\r\nimport spinner from \"../../img/spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport CharacterItem, { ItemType } from \"./CharacterItem\";\r\nimport Spinner from \"../UI/Spinner\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  items: Array<ItemType>;\r\n};\r\n\r\nconst CharacterGrid: React.FC<Props> = ({ isLoading, items }) => {\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className=\"cards\">\r\n      {items.map((item) => (\r\n        <CharacterItem key={item.char_id} item={item} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterGrid;\r\n","import React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  getQuery: (q: string) => void;\r\n};\r\n\r\nconst Search: React.FC<Props> = ({ getQuery }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const onChange = (q: string) => {\r\n    setText(q);\r\n    getQuery(q);\r\n  };\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search characters\"\r\n          value={text}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/UI/Header\";\nimport CharacterGrid from \"./components/Characters/CharacterGrid\";\nimport Search from \"./components/UI/Search\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(\n        `https://breakingbadapi.com/api/characters?name=${query}`\n      );\n      setItems(result.data);\n      setIsLoading(false);\n    };\n    fetchItems();\n  }, [query]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Search getQuery={(q: string) => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}